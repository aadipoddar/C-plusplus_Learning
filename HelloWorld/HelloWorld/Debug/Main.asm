; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	D:\C++_Learn\HelloWorld\HelloWorld\Debug\Main.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__02E23235_vcruntime_new@h DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__80A05712_cstdlib DB 01H
__6D66DEAE_cmath DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__D1154D4E_type_traits DB 01H
__7CE971A6_xutility DB 01H
__20BB4341_malloc@h DB 01H
__BDCC0984_vcruntime_exception@h DB 01H
__89F7010A_exception DB 01H
__44860E64_limits DB 01H
__DD38B15A_xmemory DB 01H
__A9EB37C6_xstring DB 01H
__00B93B57_stdexcept DB 01H
__79ECA8A5_xcall_once@h DB 01H
__A0B61CF9_time@h DB 01H
__8476F639_xthreads@h DB 01H
__2FB352A6_atomic DB 01H
__C6B1BA85_system_error DB 01H
__65F43743_vcruntime_typeinfo@h DB 01H
__0C3682BF_typeinfo DB 01H
__F82802EA_memory DB 01H
__D46D55E5_xfacet DB 01H
__B2D2BA86_ctype@h DB 01H
__13BF6177_xlocinfo DB 01H
__76D543F7_xlocale DB 01H
__2A5A1664_xiosbase DB 01H
__E85225E0_xlocnum DB 01H
__FD1AE8DD_ios DB 01H
__311D03E2_Main@cpp DB 01H
__0615AC09_istream DB 01H
__65C59933_ostream DB 01H
__021983EB_streambuf DB 01H
__6D45C6E6_iterator DB 01H
__886FDBE2_iosfwd DB 01H
__B7ADD299_utility DB 01H
__40B2458B_xstddef DB 01H
__83FB8DDC_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z	; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?Multiply@@YAHHH@Z				; Multiply
PUBLIC	?MultiplyAndLog@@YAXHH@Z			; MultiplyAndLog
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	?Increment@@YAXPAH@Z				; Increment
PUBLIC	?Increment1@@YAXAAH@Z				; Increment1
PUBLIC	?Move@Player@@QAEXHH@Z				; Player::Move
PUBLIC	?SetLevel@Log1@@QAEXH@Z				; Log1::SetLevel
PUBLIC	?Error@Log1@@QAEXPBD@Z				; Log1::Error
PUBLIC	?Warn@Log1@@QAEXPBD@Z				; Log1::Warn
PUBLIC	?Info@Log1@@QAEXPBD@Z				; Log1::Info
PUBLIC	??0Log1@@QAE@XZ					; Log1::Log1
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?Function@@YAXXZ				; Function
PUBLIC	?Get@Singleton@@SAAAV1@XZ			; Singleton::Get
PUBLIC	?Hello@Singleton@@QAEXXZ			; Singleton::Hello
PUBLIC	_main
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_08IHOKMCDK@?$FLERROR?$FN?3@		; `string'
PUBLIC	??_C@_0L@NGGLNKAL@?$FLWARNING?$FN?3@		; `string'
PUBLIC	??_C@_07CDFJBCKI@?$FLINFO?$FN?3@		; `string'
PUBLIC	?instance@?1??Get@Singleton@@SAAAV2@XZ@4V2@A	; `Singleton::Get'::`2'::instance
PUBLIC	??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@ ; `string'
PUBLIC	??_C@_0N@CIPMNJGN@Hello?5World1@		; `string'
PUBLIC	??_C@_0N@DNBIKKO@Hello?5World2@			; `string'
PUBLIC	??_C@_09GDKFCBC@ptr?5Hello@			; `string'
PUBLIC	??_C@_05COLMCDPH@Hello@				; `string'
PUBLIC	??_C@_0N@EMJABMGJ@Hello?5World5@		; `string'
PUBLIC	??_C@_0N@GHLNEPKK@Hello?5World6@		; `string'
PUBLIC	??_C@_0N@HOKGHOOL@Hello?5World7@		; `string'
PUBLIC	??_C@_0N@PJDOGCCE@Hello?5World8@		; `string'
PUBLIC	??_C@_0N@GCDOMLDM@Hello?5World?$CB@		; `string'
PUBLIC	??_C@_06KPGIMOHP@Hello?$CB@			; `string'
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	?InitLog@@YAXXZ:PROC				; InitLog
EXTRN	?Log@@YAXPBD@Z:PROC				; Log
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?i@?1??Function@@YAXXZ@4HA DD 01H DUP (?)		; `Function'::`2'::i
_BSS	ENDS
;	COMDAT ?instance@?1??Get@Singleton@@SAAAV2@XZ@4V2@A
_BSS	SEGMENT
?instance@?1??Get@Singleton@@SAAAV2@XZ@4V2@A DB 01H DUP (?) ; `Singleton::Get'::`2'::instance
_BSS	ENDS
;	COMDAT ??_C@_06KPGIMOHP@Hello?$CB@
CONST	SEGMENT
??_C@_06KPGIMOHP@Hello?$CB@ DB 'Hello!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCDOMLDM@Hello?5World?$CB@
CONST	SEGMENT
??_C@_0N@GCDOMLDM@Hello?5World?$CB@ DB 'Hello World!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PJDOGCCE@Hello?5World8@
CONST	SEGMENT
??_C@_0N@PJDOGCCE@Hello?5World8@ DB 'Hello World8', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HOKGHOOL@Hello?5World7@
CONST	SEGMENT
??_C@_0N@HOKGHOOL@Hello?5World7@ DB 'Hello World7', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GHLNEPKK@Hello?5World6@
CONST	SEGMENT
??_C@_0N@GHLNEPKK@Hello?5World6@ DB 'Hello World6', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EMJABMGJ@Hello?5World5@
CONST	SEGMENT
??_C@_0N@EMJABMGJ@Hello?5World5@ DB 'Hello World5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05COLMCDPH@Hello@
CONST	SEGMENT
??_C@_05COLMCDPH@Hello@ DB 'Hello', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09GDKFCBC@ptr?5Hello@
CONST	SEGMENT
??_C@_09GDKFCBC@ptr?5Hello@ DB 'ptr Hello', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DNBIKKO@Hello?5World2@
CONST	SEGMENT
??_C@_0N@DNBIKKO@Hello?5World2@ DB 'Hello World2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CIPMNJGN@Hello?5World1@
CONST	SEGMENT
??_C@_0N@CIPMNJGN@Hello?5World1@ DB 'Hello World1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
CONST	SEGMENT
??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@ DB '='
	DB	'===================================', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CDFJBCKI@?$FLINFO?$FN?3@
CONST	SEGMENT
??_C@_07CDFJBCKI@?$FLINFO?$FN?3@ DB '[INFO]:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NGGLNKAL@?$FLWARNING?$FN?3@
CONST	SEGMENT
??_C@_0L@NGGLNKAL@?$FLWARNING?$FN?3@ DB '[WARNING]:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IHOKMCDK@?$FLERROR?$FN?3@
CONST	SEGMENT
??_C@_08IHOKMCDK@?$FLERROR?$FN?3@ DB '[ERROR]:', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 124
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	al, BYTE PTR [esi+4]
	pop	esi
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN2@sentry
; Line 119
	mov	ecx, DWORD PTR [esi]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
$LN2@sentry:
; Line 121
	mov	ecx, esi
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Ogtp
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	edi, DWORD PTR __Ostr$[ebp]
	mov	ecx, esi
	push	edi
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edi
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	test	al, al
	je	SHORT $LN8@sentry
$LN2@sentry:
; Line 98
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edi
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
; Line 99
	test	eax, eax
	je	SHORT $LN4@sentry
	cmp	eax, edi
	je	SHORT $LN4@sentry
; Line 104
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
; Line 105
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edi
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	jmp	SHORT $LN8@sentry
$LN4@sentry:
; Line 100
	mov	al, 1
$LN8@sentry:
; Line 106
	mov	BYTE PTR [esi+4], al
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Ogtp
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 81
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	call	DWORD PTR [edx+8]
$LN2@Sentry_bas:
; Line 83
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 71
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [esi], edx
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN4@Sentry_bas
; Line 74
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	call	DWORD PTR [edx+4]
$LN4@Sentry_bas:
; Line 76
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _main
_TEXT	SEGMENT
_log$ = -24						; size = 16
_player$ = -20						; size = 12
_a$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 4
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	8
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	20					; 00000014H
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 4
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	1
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	2
	push	3
	call	?MultiplyAndLog@@YAXHH@Z		; MultiplyAndLog
	push	5
	push	8
	call	?MultiplyAndLog@@YAXHH@Z		; MultiplyAndLog
	push	45					; 0000002dH
	push	90					; 0000005aH
	call	?MultiplyAndLog@@YAXHH@Z		; MultiplyAndLog
	call	?InitLog@@YAXXZ				; InitLog
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0N@CIPMNJGN@Hello?5World1@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0N@DNBIKKO@Hello?5World2@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_09GDKFCBC@ptr?5Hello@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 64					; 00000040H
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_05COLMCDPH@Hello@
	call	?Log@@YAXPBD@Z				; Log
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 12					; 0000000cH
	mov	esi, 5
$LL4@main:
; Line 206
	push	OFFSET ??_C@_0N@EMJABMGJ@Hello?5World5@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
	sub	esi, 1
	jne	SHORT $LL4@main
; Line 209
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
	mov	esi, 5
	npad	8
$LL5@main:
; Line 215
	push	OFFSET ??_C@_0N@GHLNEPKK@Hello?5World6@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
	sub	esi, 1
	jne	SHORT $LL5@main
; Line 219
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
; Line 223
	mov	bl, 1
$LL8@main:
; Line 226
	push	OFFSET ??_C@_0N@HOKGHOOL@Hello?5World7@
	call	?Log@@YAXPBD@Z				; Log
; Line 227
	inc	esi
	movzx	eax, bl
	xor	ecx, ecx
	add	esp, 4
	cmp	esi, 5
	cmovl	ecx, eax
	mov	bl, cl
	test	bl, bl
	jne	SHORT $LL8@main
; Line 232
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
	mov	esi, 5
$LL11@main:
; Line 237
	push	OFFSET ??_C@_0N@PJDOGCCE@Hello?5World8@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
	sub	esi, 1
	jne	SHORT $LL11@main
; Line 241
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
	xor	ebx, ebx
$LL15@main:
; Line 247
	test	bl, 1
	je	SHORT $LN13@main
; Line 249
	push	OFFSET ??_C@_0N@GCDOMLDM@Hello?5World?$CB@
	call	?Log@@YAXPBD@Z				; Log
; Line 250
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 4
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	ebx
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
$LN13@main:
; Line 245
	inc	ebx
	cmp	ebx, 5
	jl	SHORT $LL15@main
; Line 256
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
; Line 260
	xor	esi, esi
$LL18@main:
; Line 262
	lea	ebx, DWORD PTR [esi+1]
	test	bl, 1
	je	SHORT $LN39@main
; Line 264
	push	OFFSET ??_C@_0N@GCDOMLDM@Hello?5World?$CB@
	call	?Log@@YAXPBD@Z				; Log
; Line 265
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 4
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	esi
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	mov	esi, ebx
	cmp	esi, 5
	jl	SHORT $LL18@main
$LN39@main:
; Line 299
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
; Line 303
	lea	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _a$[ebp], 5
	push	eax
	call	?Increment@@YAXPAH@Z			; Increment
; Line 304
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 8
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	DWORD PTR _a$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
; Line 308
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
; Line 312
	lea	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _a$[ebp], 5
	push	eax
	call	?Increment1@@YAXAAH@Z			; Increment1
; Line 313
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 8
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	DWORD PTR _a$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
; Line 317
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
; Line 327
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 4
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	2
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
; Line 328
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	1
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
; Line 334
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 4
; Line 338
	mov	DWORD PTR _player$[ebp], 5
; Line 341
	lea	ecx, DWORD PTR _player$[ebp]
	push	-1
	push	1
	call	?Move@Player@@QAEXHH@Z			; Player::Move
; Line 349
	lea	ecx, DWORD PTR _log$[ebp]
	call	??0Log1@@QAE@XZ
; Line 350
	push	DWORD PTR _log$[ebp+4]
	lea	ecx, DWORD PTR _log$[ebp]
	call	?SetLevel@Log1@@QAEXH@Z			; Log1::SetLevel
; Line 351
	push	OFFSET ??_C@_06KPGIMOHP@Hello?$CB@
	lea	ecx, DWORD PTR _log$[ebp]
	call	?Warn@Log1@@QAEXPBD@Z			; Log1::Warn
; Line 352
	push	OFFSET ??_C@_06KPGIMOHP@Hello?$CB@
	lea	ecx, DWORD PTR _log$[ebp]
	call	?Error@Log1@@QAEXPBD@Z			; Log1::Error
; Line 353
	push	OFFSET ??_C@_06KPGIMOHP@Hello?$CB@
	lea	ecx, DWORD PTR _log$[ebp]
	call	?Info@Log1@@QAEXPBD@Z			; Log1::Info
; Line 359
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
; Line 362
	call	?Function@@YAXXZ			; Function
; Line 363
	call	?Function@@YAXXZ			; Function
; Line 364
	call	?Function@@YAXXZ			; Function
; Line 368
	push	OFFSET ??_C@_0CF@OCNIOMHA@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	call	?Log@@YAXPBD@Z				; Log
	add	esp, 8
; Line 370
	call	?Get@Singleton@@SAAAV1@XZ		; Singleton::Get
	mov	ecx, eax
	call	?Hello@Singleton@@QAEXXZ		; Singleton::Hello
; Line 372
	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
; Line 374
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	eax, eax
	pop	esi
	pop	ebx
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Hello@Singleton@@QAEXXZ
_TEXT	SEGMENT
?Hello@Singleton@@QAEXXZ PROC				; Singleton::Hello, COMDAT
; _this$ = ecx
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	jmp	@__CheckForDebuggerJustMyCode@4
?Hello@Singleton@@QAEXXZ ENDP				; Singleton::Hello
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Get@Singleton@@SAAAV1@XZ
_TEXT	SEGMENT
?Get@Singleton@@SAAAV1@XZ PROC				; Singleton::Get, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, OFFSET ?instance@?1??Get@Singleton@@SAAAV2@XZ@4V2@A ; `Singleton::Get'::`2'::instance
	ret	0
?Get@Singleton@@SAAAV1@XZ ENDP				; Singleton::Get
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Function@@YAXXZ
_TEXT	SEGMENT
?Function@@YAXXZ PROC					; Function, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR ?i@?1??Function@@YAXXZ@4HA
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	inc	eax
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	eax
	mov	DWORD PTR ?i@?1??Function@@YAXXZ@4HA, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	ret	0
?Function@@YAXXZ ENDP					; Function
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
__Ok$ = -48						; size = 8
__Pad$ = -40						; size = 8
tv166 = -36						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -32						; size = 4
tv167 = -28						; size = 4
$T5 = -28						; size = 4
__Count$2$ = -24					; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 734
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR __Val$[ebp]
	mov	DWORD PTR __State$[ebp], 0
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	esi, DWORD PTR __Ostr$[ebp]
	add	esp, 4
	mov	ebx, eax
	mov	DWORD PTR __Count$2$[ebp], ebx
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	test	edx, edx
	jl	SHORT $LN17@operator
; Line 740
	jg	SHORT $LN34@operator
	test	eax, eax
	je	SHORT $LN17@operator
$LN34@operator:
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	test	edx, edx
	jl	SHORT $LN17@operator
	jg	SHORT $LN35@operator
	cmp	eax, ebx
	jbe	SHORT $LN17@operator
$LN35@operator:
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	edi, eax
	mov	ebx, edx
	sub	edi, DWORD PTR __Count$2$[ebp]
	sbb	ebx, 0
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR __Pad$[ebp], xmm0
	mov	ebx, DWORD PTR __Pad$[ebp+4]
	mov	edi, DWORD PTR __Pad$[ebp]
$LN18@operator:
; Line 741
	push	esi
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Line 743
	lea	ecx, DWORD PTR __Ok$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	test	al, al
	jne	SHORT $LN8@operator
; Line 744
	mov	ebx, 4
; Line 745
	jmp	$LN22@operator
$LN8@operator:
; Line 747
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN30@operator
$LL4@operator:
; Line 748
	test	ebx, ebx
	jl	SHORT $LN30@operator
	jg	SHORT $LN36@operator
	test	edi, edi
	je	SHORT $LN30@operator
$LN36@operator:
; Line 749
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR tv167[ebp], al
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	push	DWORD PTR tv167[ebp]
	mov	ecx, eax
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR $T4[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T2[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	test	al, al
	jne	SHORT $LN44@operator
; Line 748
	add	edi, -1
	adc	ebx, -1
	jmp	SHORT $LL4@operator
$LN30@operator:
; Line 756
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	push	0
	push	DWORD PTR __Count$2$[ebp]
	mov	ecx, eax
	push	DWORD PTR __Val$[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	eax, DWORD PTR __Count$2$[ebp]
	jne	SHORT $LN44@operator
	test	edx, edx
	jne	SHORT $LN44@operator
$LL39@operator:
; Line 761
	test	ebx, ebx
	jl	SHORT $LN42@operator
	jg	SHORT $LN38@operator
	test	edi, edi
	je	SHORT $LN42@operator
$LN38@operator:
; Line 762
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR tv166[ebp], al
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	push	DWORD PTR tv166[ebp]
	mov	ecx, eax
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR $T3[ebp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	test	al, al
	je	SHORT $LN5@operator
$LN44@operator:
; Line 769
	mov	ebx, 4
	mov	DWORD PTR __State$[ebp], ebx
	jmp	SHORT $LN6@operator
$LN5@operator:
; Line 761
	add	edi, -1
	adc	ebx, -1
	jmp	SHORT $LL39@operator
$LN42@operator:
; Line 769
	xor	ebx, ebx
$LN6@operator:
	mov	eax, DWORD PTR [esi]
	push	0
	push	0
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	jmp	SHORT $LN45@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 770
	mov	edx, DWORD PTR __Ostr$[ebp]
	push	1
	push	4
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	eax, $LN23@operator
	ret	0
$LN23@operator:
	mov	esi, DWORD PTR __Ostr$[ebp]
	mov	ebx, DWORD PTR __State$[ebp]
$LN45@operator:
; Line 773
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN22@operator:
	mov	ecx, DWORD PTR [esi]
	push	0
	push	ebx
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, esi
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 774
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, esi
; Line 775
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0Log1@@QAE@XZ
_TEXT	SEGMENT
??0Log1@@QAE@XZ PROC					; Log1::Log1, COMDAT
; _this$ = ecx
	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 1
	mov	DWORD PTR [ecx+8], 2
	mov	DWORD PTR [ecx+12], 2
	ret	0
??0Log1@@QAE@XZ ENDP					; Log1::Log1
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Info@Log1@@QAEXPBD@Z
_TEXT	SEGMENT
_message$ = 8						; size = 4
?Info@Log1@@QAEXPBD@Z PROC				; Log1::Info, COMDAT
; _this$ = ecx
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 81
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, DWORD PTR [esi+8]
	pop	esi
	jl	SHORT $LN2@Info
; Line 83
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	DWORD PTR _message$[ebp]
	push	OFFSET ??_C@_07CDFJBCKI@?$FLINFO?$FN?3@
	push	DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
$LN2@Info:
; Line 84
	pop	ebp
	ret	4
?Info@Log1@@QAEXPBD@Z ENDP				; Log1::Info
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Warn@Log1@@QAEXPBD@Z
_TEXT	SEGMENT
_message$ = 8						; size = 4
?Warn@Log1@@QAEXPBD@Z PROC				; Log1::Warn, COMDAT
; _this$ = ecx
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 73
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, DWORD PTR [esi+4]
	pop	esi
	jl	SHORT $LN2@Warn
; Line 75
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	DWORD PTR _message$[ebp]
	push	OFFSET ??_C@_0L@NGGLNKAL@?$FLWARNING?$FN?3@
	push	DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
$LN2@Warn:
; Line 76
	pop	ebp
	ret	4
?Warn@Log1@@QAEXPBD@Z ENDP				; Log1::Warn
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Error@Log1@@QAEXPBD@Z
_TEXT	SEGMENT
_message$ = 8						; size = 4
?Error@Log1@@QAEXPBD@Z PROC				; Log1::Error, COMDAT
; _this$ = ecx
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 66
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR [esi+12]
	cmp	eax, DWORD PTR [esi]
	pop	esi
	jl	SHORT $LN2@Error
; Line 68
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	DWORD PTR _message$[ebp]
	push	OFFSET ??_C@_08IHOKMCDK@?$FLERROR?$FN?3@
	push	DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
$LN2@Error:
; Line 69
	pop	ebp
	ret	4
?Error@Log1@@QAEXPBD@Z ENDP				; Log1::Error
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetLevel@Log1@@QAEXH@Z
_TEXT	SEGMENT
_level$ = 8						; size = 4
?SetLevel@Log1@@QAEXH@Z PROC				; Log1::SetLevel, COMDAT
; _this$ = ecx
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 61
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _level$[ebp]
	mov	DWORD PTR [esi+12], eax
	pop	esi
; Line 63
	pop	ebp
	ret	4
?SetLevel@Log1@@QAEXH@Z ENDP				; Log1::SetLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Move@Player@@QAEXHH@Z
_TEXT	SEGMENT
_xa$ = 8						; size = 4
_ya$ = 12						; size = 4
?Move@Player@@QAEXHH@Z PROC				; Player::Move, COMDAT
; _this$ = ecx
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 40
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	edx, DWORD PTR [esi+8]
	mov	eax, edx
	imul	eax, DWORD PTR _xa$[ebp]
	imul	edx, DWORD PTR _ya$[ebp]
	add	DWORD PTR [esi], eax
	add	DWORD PTR [esi+4], edx
	pop	esi
; Line 43
	pop	ebp
	ret	8
?Move@Player@@QAEXHH@Z ENDP				; Player::Move
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Increment1@@YAXAAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?Increment1@@YAXAAH@Z PROC				; Increment1, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 28
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _value$[ebp]
	inc	DWORD PTR [eax]
; Line 30
	pop	ebp
	ret	0
?Increment1@@YAXAAH@Z ENDP				; Increment1
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Increment@@YAXPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?Increment@@YAXPAH@Z PROC				; Increment, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _value$[ebp]
	inc	DWORD PTR [eax]
; Line 21
	pop	ebp
	ret	0
?Increment@@YAXPAH@Z ENDP				; Increment
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\ostream
; Line 978
	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __65C59933_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	esi, DWORD PTR __Ostr$[ebp]
	push	10					; 0000000aH
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, esi
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	movzx	ecx, al
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	mov	ecx, esi
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	mov	eax, esi
	pop	esi
; Line 982
	pop	ebp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?MultiplyAndLog@@YAXHH@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?MultiplyAndLog@@YAXHH@Z PROC				; MultiplyAndLog, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 12
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _b$[ebp]
	push	DWORD PTR _a$[ebp]
	call	?Multiply@@YAHHH@Z			; Multiply
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	esp, 8
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	push	eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
; Line 15
	pop	ebp
	ret	0
?MultiplyAndLog@@YAXHH@Z ENDP				; MultiplyAndLog
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Multiply@@YAHHH@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Multiply@@YAHHH@Z PROC					; Multiply, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
; Line 6
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _a$[ebp]
	imul	eax, DWORD PTR _b$[ebp]
; Line 8
	pop	ebp
	ret	0
?Multiply@@YAHHH@Z ENDP					; Multiply
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
	mov	ecx, OFFSET __A9EB37C6_xstring
	call	@__CheckForDebuggerJustMyCode@4
	or	eax, -1
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; Line 469
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __A9EB37C6_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [eax]
	sete	al
; Line 471
	pop	ebp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30037\include\xstring
; Line 396
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __A9EB37C6_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
$LL3@length:
; Line 412
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx
; Line 414
	pop	ebp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	jmp	@__CheckForDebuggerJustMyCode@4
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File D:\C++_Learn\HelloWorld\HelloWorld\Main.cpp
	mov	ecx, OFFSET __311D03E2_Main@cpp
	jmp	@__CheckForDebuggerJustMyCode@4
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
